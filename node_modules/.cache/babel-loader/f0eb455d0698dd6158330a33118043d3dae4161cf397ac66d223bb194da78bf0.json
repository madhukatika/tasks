{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhavi.katika\\\\Downloads\\\\first-task1\\\\first-task1-main\\\\src\\\\Components\\\\scrollbar.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// const DateRangeBar = () => {\n//   const [startDate, setStartDate] = useState('');\n//   const [endDate, setEndDate] = useState('');\n\n//   const handleDateChange = (event) => {\n//     const { name, value } = event.target;\n//     if (name === 'startDate') {\n//       setStartDate(value);\n//     } else if (name === 'endDate') {\n//       setEndDate(value);\n//     }\n//     // Perform your data filtering based on the selected date range here\n//     // You can pass the start and end dates to an API or filter the data locally\n//   };\n\n//   return (\n//     <div>\n//       <label>Start Date:</label>\n//       <input\n//         type=\"date\"\n//         name=\"startDate\"\n//         value={startDate}\n//         onChange={handleDateChange}\n//       />\n\n//       <label>End Date:</label>\n//       <input\n//         type=\"date\"\n//         name=\"endDate\"\n//         value={endDate}\n//         onChange={handleDateChange}\n//       />\n//     </div>\n//   );\n// };\n\n// export default DateRangeBar;\n\nimport React, { useState } from 'react';\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateRangeBar = () => {\n  _s();\n  const [dateRange, setDateRange] = useState([{\n    startDate: new Date(),\n    endDate: new Date(),\n    key: 'selection'\n  }]);\n  const handleDateChange = ranges => {\n    setDateRange([ranges.selection]);\n    // Perform your data filtering based on the selected date range here\n    // You can pass the start and end dates to an API or filter the data locally\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DateRangePicker, {\n      ranges: dateRange,\n      onChange: handleDateChange,\n      scroll: {\n        enabled: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(DateRangeBar, \"LX9VYdgY0jdmOeO9zwT+nwRAC44=\");\n_c = DateRangeBar;\nexport default DateRangeBar;\nvar _c;\n$RefreshReg$(_c, \"DateRangeBar\");","map":{"version":3,"names":["React","useState","DateRangePicker","jsxDEV","_jsxDEV","DateRangeBar","_s","dateRange","setDateRange","startDate","Date","endDate","key","handleDateChange","ranges","selection","children","onChange","scroll","enabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/madhavi.katika/Downloads/first-task1/first-task1-main/src/Components/scrollbar.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// const DateRangeBar = () => {\r\n//   const [startDate, setStartDate] = useState('');\r\n//   const [endDate, setEndDate] = useState('');\r\n\r\n//   const handleDateChange = (event) => {\r\n//     const { name, value } = event.target;\r\n//     if (name === 'startDate') {\r\n//       setStartDate(value);\r\n//     } else if (name === 'endDate') {\r\n//       setEndDate(value);\r\n//     }\r\n//     // Perform your data filtering based on the selected date range here\r\n//     // You can pass the start and end dates to an API or filter the data locally\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <label>Start Date:</label>\r\n//       <input\r\n//         type=\"date\"\r\n//         name=\"startDate\"\r\n//         value={startDate}\r\n//         onChange={handleDateChange}\r\n//       />\r\n\r\n//       <label>End Date:</label>\r\n//       <input\r\n//         type=\"date\"\r\n//         name=\"endDate\"\r\n//         value={endDate}\r\n//         onChange={handleDateChange}\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DateRangeBar;\r\n\r\nimport React, { useState } from 'react';\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\n\r\nconst DateRangeBar = () => {\r\n  const [dateRange, setDateRange] = useState([\r\n    {\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      key: 'selection',\r\n    },\r\n  ]);\r\n\r\n  const handleDateChange = (ranges) => {\r\n    setDateRange([ranges.selection]);\r\n    // Perform your data filtering based on the selected date range here\r\n    // You can pass the start and end dates to an API or filter the data locally\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DateRangePicker\r\n        ranges={dateRange}\r\n        onChange={handleDateChange}\r\n        scroll={{ enabled: true }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateRangeBar;\r\n\r\n\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,kBAAkB;AAClD,OAAO,kCAAkC,CAAC,CAAC;AAC3C,OAAO,yCAAyC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CACzC;IACEQ,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;IACrBC,OAAO,EAAE,IAAID,IAAI,CAAC,CAAC;IACnBE,GAAG,EAAE;EACP,CAAC,CACF,CAAC;EAEF,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;IACnCN,YAAY,CAAC,CAACM,MAAM,CAACC,SAAS,CAAC,CAAC;IAChC;IACA;EACF,CAAC;;EAED,oBACEX,OAAA;IAAAY,QAAA,eACEZ,OAAA,CAACF,eAAe;MACdY,MAAM,EAAEP,SAAU;MAClBU,QAAQ,EAAEJ,gBAAiB;MAC3BK,MAAM,EAAE;QAAEC,OAAO,EAAE;MAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAxBID,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}