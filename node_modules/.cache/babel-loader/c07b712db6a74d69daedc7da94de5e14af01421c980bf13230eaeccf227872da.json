{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhavi.katika\\\\Downloads\\\\first-task1\\\\first-task1-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport GraphData from './Components/GraphData';\nimport SearchComponent from './Components/SearchData';\nimport Gdata from './Components/GobalContext';\nimport { useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport DateRangeBar from './Components/scrollbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let update = data => {\n    setGdata({\n      ...gdata,\n      \"lineGraph\": [...gdata.lineGraph, ...data]\n    });\n  };\n  let [gdata, setGdata] = useState({\n    \"update\": update,\n    \"lineGraph\": []\n  });\n  console.log(\"from app\", gdata);\n  const scrollbarStyle = {\n    width: 1500,\n    height: 1000,\n    scrollbarWidth: 'thin',\n    // Adjust scrollbar width (thin, auto, etc.)\n    scrollbarColor: 'rgba(0, 0, 0, 0.3) transparent' // Adjust scrollbar color and transparency\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n      style: {\n        width: 1500,\n        height: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(Gdata.Provider, {\n        value: gdata,\n        children: [/*#__PURE__*/_jsxDEV(SearchComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(GraphData, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"WVpOBSbL8N2ej/6543xxOUSE2cw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["GraphData","SearchComponent","Gdata","useState","Scrollbars","DateRangeBar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","update","data","setGdata","gdata","lineGraph","console","log","scrollbarStyle","width","height","scrollbarWidth","scrollbarColor","children","style","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/madhavi.katika/Downloads/first-task1/first-task1-main/src/App.js"],"sourcesContent":["import './App.css';\nimport GraphData from './Components/GraphData';\nimport SearchComponent from './Components/SearchData';\n\nimport Gdata from './Components/GobalContext';\nimport { useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport DateRangeBar from './Components/scrollbar';\n\n\n\nfunction App() {\n  let update=(data)=>{\n    setGdata({...gdata,\"lineGraph\":[...gdata.lineGraph,...data]})\n  }\n  let [gdata,setGdata]=useState({\"update\":update,\"lineGraph\":[]})\n  console.log(\"from app\",gdata)\n\n  const scrollbarStyle = {\n    width: 1500,\n    height: 1000,\n    scrollbarWidth: 'thin', // Adjust scrollbar width (thin, auto, etc.)\n    scrollbarColor: 'rgba(0, 0, 0, 0.3) transparent', // Adjust scrollbar color and transparency\n  };\n  return (\n    <>\n<Scrollbars style={{ width: 1500, height: 1000 }}>\n<Gdata.Provider value={gdata}>\n\n <SearchComponent/>\n <GraphData/>\n </Gdata.Provider>\n </Scrollbars>\n{/* <DateRangeBar/> */}\n\n\n\n\n \n  </>\n   \n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,eAAe,MAAM,yBAAyB;AAErD,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,yBAAyB;AACpD,OAAOC,YAAY,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIlD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAIC,MAAM,GAAEC,IAAI,IAAG;IACjBC,QAAQ,CAAC;MAAC,GAAGC,KAAK;MAAC,WAAW,EAAC,CAAC,GAAGA,KAAK,CAACC,SAAS,EAAC,GAAGH,IAAI;IAAC,CAAC,CAAC;EAC/D,CAAC;EACD,IAAI,CAACE,KAAK,EAACD,QAAQ,CAAC,GAACX,QAAQ,CAAC;IAAC,QAAQ,EAACS,MAAM;IAAC,WAAW,EAAC;EAAE,CAAC,CAAC;EAC/DK,OAAO,CAACC,GAAG,CAAC,UAAU,EAACH,KAAK,CAAC;EAE7B,MAAMI,cAAc,GAAG;IACrBC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,cAAc,EAAE,MAAM;IAAE;IACxBC,cAAc,EAAE,gCAAgC,CAAE;EACpD,CAAC;;EACD,oBACEhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACJjB,OAAA,CAACH,UAAU;MAACqB,KAAK,EAAE;QAAEL,KAAK,EAAE,IAAI;QAAEC,MAAM,EAAE;MAAK,CAAE;MAAAG,QAAA,eACjDjB,OAAA,CAACL,KAAK,CAACwB,QAAQ;QAACC,KAAK,EAAEZ,KAAM;QAAAS,QAAA,gBAE5BjB,OAAA,CAACN,eAAe;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAClBxB,OAAA,CAACP,SAAS;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBAOV,CAAC;AAGL;AAACpB,EAAA,CA/BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}