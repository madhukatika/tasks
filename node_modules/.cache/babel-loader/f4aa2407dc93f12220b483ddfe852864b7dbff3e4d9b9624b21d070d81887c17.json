{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhavi.katika\\\\Downloads\\\\first-task1\\\\first-task1-main\\\\src\\\\Components\\\\scrollbar.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// const DateRangeBar = () => {\n//   const [startDate, setStartDate] = useState('');\n//   const [endDate, setEndDate] = useState('');\n\n//   const handleDateChange = (event) => {\n//     const { name, value } = event.target;\n//     if (name === 'startDate') {\n//       setStartDate(value);\n//     } else if (name === 'endDate') {\n//       setEndDate(value);\n//     }\n//     // Perform your data filtering based on the selected date range here\n//     // You can pass the start and end dates to an API or filter the data locally\n//   };\n\n//   return (\n//     <div>\n//       <label>Start Date:</label>\n//       <input\n//         type=\"date\"\n//         name=\"startDate\"\n//         value={startDate}\n//         onChange={handleDateChange}\n//       />\n\n//       <label>End Date:</label>\n//       <input\n//         type=\"date\"\n//         name=\"endDate\"\n//         value={endDate}\n//         onChange={handleDateChange}\n//       />\n//     </div>\n//   );\n// };\n\n// export default DateRangeBar;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateRangeBar = () => {\n  _s();\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const handleDateChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === 'startDate') {\n      setStartDate(value);\n    } else if (name === 'endDate') {\n      setEndDate(value);\n    }\n    // Perform your data filtering based on the selected date range here\n    // You can pass the start and end dates to an API or filter the data locally\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Start Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"startDate\",\n      value: startDate,\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"End Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"endDate\",\n      value: endDate,\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: [\"Selected Date Range: \", startDate, \" - \", endDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(DateRangeBar, \"tOzGTxBi4OgONuhYAP43LC7m7Tg=\");\n_c = DateRangeBar;\nexport default DateRangeBar;\nvar _c;\n$RefreshReg$(_c, \"DateRangeBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DateRangeBar","_s","startDate","setStartDate","endDate","setEndDate","handleDateChange","event","name","value","target","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/madhavi.katika/Downloads/first-task1/first-task1-main/src/Components/scrollbar.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// const DateRangeBar = () => {\r\n//   const [startDate, setStartDate] = useState('');\r\n//   const [endDate, setEndDate] = useState('');\r\n\r\n//   const handleDateChange = (event) => {\r\n//     const { name, value } = event.target;\r\n//     if (name === 'startDate') {\r\n//       setStartDate(value);\r\n//     } else if (name === 'endDate') {\r\n//       setEndDate(value);\r\n//     }\r\n//     // Perform your data filtering based on the selected date range here\r\n//     // You can pass the start and end dates to an API or filter the data locally\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <label>Start Date:</label>\r\n//       <input\r\n//         type=\"date\"\r\n//         name=\"startDate\"\r\n//         value={startDate}\r\n//         onChange={handleDateChange}\r\n//       />\r\n\r\n//       <label>End Date:</label>\r\n//       <input\r\n//         type=\"date\"\r\n//         name=\"endDate\"\r\n//         value={endDate}\r\n//         onChange={handleDateChange}\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DateRangeBar;\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst DateRangeBar = () => {\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n\r\n  const handleDateChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === 'startDate') {\r\n      setStartDate(value);\r\n    } else if (name === 'endDate') {\r\n      setEndDate(value);\r\n    }\r\n    // Perform your data filtering based on the selected date range here\r\n    // You can pass the start and end dates to an API or filter the data locally\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>Start Date:</label>\r\n      <input\r\n        type=\"date\"\r\n        name=\"startDate\"\r\n        value={startDate}\r\n        onChange={handleDateChange}\r\n      />\r\n\r\n      <label>End Date:</label>\r\n      <input\r\n        type=\"date\"\r\n        name=\"endDate\"\r\n        value={endDate}\r\n        onChange={handleDateChange}\r\n      />\r\n\r\n      <div style={{ marginTop: '10px' }}>\r\n        Selected Date Range: {startDate} - {endDate}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateRangeBar;\r\n\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpC,IAAIF,IAAI,KAAK,WAAW,EAAE;MACxBL,YAAY,CAACM,KAAK,CAAC;IACrB,CAAC,MAAM,IAAID,IAAI,KAAK,SAAS,EAAE;MAC7BH,UAAU,CAACI,KAAK,CAAC;IACnB;IACA;IACA;EACF,CAAC;;EAED,oBACEV,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAO;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1BhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXR,IAAI,EAAC,WAAW;MAChBC,KAAK,EAAEP,SAAU;MACjBe,QAAQ,EAAEX;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAEFhB,OAAA;MAAAY,QAAA,EAAO;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxBhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXR,IAAI,EAAC,SAAS;MACdC,KAAK,EAAEL,OAAQ;MACfa,QAAQ,EAAEX;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAEFhB,OAAA;MAAKmB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAR,QAAA,GAAC,uBACZ,EAACT,SAAS,EAAC,KAAG,EAACE,OAAO;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAtCID,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}