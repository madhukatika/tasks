{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhavi.katika\\\\Downloads\\\\first-task1\\\\first-task1-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import './App.css';\n// import GraphData from './Components/GraphData';\n// import SearchComponent from './Components/SearchData';\n// import Gdata from './Components/GobalContext';\n// import { useState } from 'react';\n// import { Scrollbars } from 'react-custom-scrollbars';\n\n// function App() {\n//   let update=(data)=>{\n//     setGdata({...gdata,\"lineGraph\":[...gdata.lineGraph,...data]})\n//   }\n//   let [gdata,setGdata]=useState({\"update\":update,\"lineGraph\":[]})\n//   console.log(\"from app\",gdata)\n//   return (\n//     <>\n// <Scrollbars style={{ width: 1500, height: 1000 }}>\n// <Gdata.Provider value={gdata}>\n\n//  <SearchComponent/>\n//  <GraphData/>\n//  </Gdata.Provider>\n//  </Scrollbars>\n\n//   </>\n\n//   );\n// }\n\n// export default App;\n\nimport './App.css';\nimport GraphData from './Components/GraphData';\nimport SearchComponent from './Components/SearchData';\nimport Gdata from './Components/GobalContext';\nimport { useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let update = data => {\n    setGdata({\n      ...gdata,\n      \"lineGraph\": [...gdata.lineGraph, ...data]\n    });\n  };\n  let [gdata, setGdata] = useState({\n    \"update\": update,\n    \"lineGraph\": []\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n      style: {\n        width: '0%',\n        height: '500px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Gdata.Provider, {\n        value: gdata,\n        children: [/*#__PURE__*/_jsxDEV(SearchComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GraphData, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"9GmzJ+c26bPhS6HJQPF04A6VNO8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["GraphData","SearchComponent","Gdata","useState","Scrollbars","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","update","data","setGdata","gdata","lineGraph","children","style","width","height","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/madhavi.katika/Downloads/first-task1/first-task1-main/src/App.js"],"sourcesContent":["// import './App.css';\n// import GraphData from './Components/GraphData';\n// import SearchComponent from './Components/SearchData';\n// import Gdata from './Components/GobalContext';\n// import { useState } from 'react';\n// import { Scrollbars } from 'react-custom-scrollbars';\n\n\n\n// function App() {\n//   let update=(data)=>{\n//     setGdata({...gdata,\"lineGraph\":[...gdata.lineGraph,...data]})\n//   }\n//   let [gdata,setGdata]=useState({\"update\":update,\"lineGraph\":[]})\n//   console.log(\"from app\",gdata)\n//   return (\n//     <>\n// <Scrollbars style={{ width: 1500, height: 1000 }}>\n// <Gdata.Provider value={gdata}>\n\n//  <SearchComponent/>\n//  <GraphData/>\n//  </Gdata.Provider>\n//  </Scrollbars>\n\n\n\n\n \n//   </>\n   \n//   );\n// }\n\n// export default App;\n\nimport './App.css';\nimport GraphData from './Components/GraphData';\nimport SearchComponent from './Components/SearchData';\nimport Gdata from './Components/GobalContext';\nimport { useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nfunction App() {\n  let update = (data) => {\n    setGdata({ ...gdata, \"lineGraph\": [...gdata.lineGraph, ...data] })\n  }\n  let [gdata, setGdata] = useState({ \"update\": update, \"lineGraph\": [] })\n\n  return (\n    <>\n      <Scrollbars style={{ width: '0%', height: '500px' }}>\n        <Gdata.Provider value={gdata}>\n          <SearchComponent />\n          <GraphData />\n        </Gdata.Provider>\n      </Scrollbars>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAMA;;AAEA;AACA;;AAEA;;AAEA,OAAO,WAAW;AAClB,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAIC,MAAM,GAAIC,IAAI,IAAK;IACrBC,QAAQ,CAAC;MAAE,GAAGC,KAAK;MAAE,WAAW,EAAE,CAAC,GAAGA,KAAK,CAACC,SAAS,EAAE,GAAGH,IAAI;IAAE,CAAC,CAAC;EACpE,CAAC;EACD,IAAI,CAACE,KAAK,EAAED,QAAQ,CAAC,GAAGV,QAAQ,CAAC;IAAE,QAAQ,EAAEQ,MAAM;IAAE,WAAW,EAAE;EAAG,CAAC,CAAC;EAEvE,oBACEL,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACEV,OAAA,CAACF,UAAU;MAACa,KAAK,EAAE;QAAEC,KAAK,EAAE,IAAI;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAH,QAAA,eAClDV,OAAA,CAACJ,KAAK,CAACkB,QAAQ;QAACC,KAAK,EAAEP,KAAM;QAAAE,QAAA,gBAC3BV,OAAA,CAACL,eAAe;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnBnB,OAAA,CAACN,SAAS;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC,gBACb,CAAC;AAEP;AAACf,EAAA,CAhBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAkBZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}