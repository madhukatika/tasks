{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhavi.katika\\\\Downloads\\\\first-task1\\\\first-task1-main\\\\src\\\\Components\\\\scrollbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateRangeBar = () => {\n  _s();\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const handleDateChange = dates => {\n    const [start, end] = dates;\n    setStartDate(start);\n    setEndDate(end);\n    // Perform your data filtering based on the selected date range here\n    // You can pass the start and end dates to an API or filter the data locally\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: startDate,\n      onChange: handleDateChange,\n      startDate: startDate,\n      endDate: endDate,\n      selectsRange: true,\n      inline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(DateRangeBar, \"L5d15HCt6K5rlt26r2UFfuEEVmA=\");\n_c = DateRangeBar;\nexport default DateRangeBar;\nvar _c;\n$RefreshReg$(_c, \"DateRangeBar\");","map":{"version":3,"names":["React","useState","DatePicker","jsxDEV","_jsxDEV","DateRangeBar","_s","startDate","setStartDate","endDate","setEndDate","handleDateChange","dates","start","end","children","selected","onChange","selectsRange","inline","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/madhavi.katika/Downloads/first-task1/first-task1-main/src/Components/scrollbar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst DateRangeBar = () => {\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  const handleDateChange = (dates) => {\r\n    const [start, end] = dates;\r\n    setStartDate(start);\r\n    setEndDate(end);\r\n    // Perform your data filtering based on the selected date range here\r\n    // You can pass the start and end dates to an API or filter the data locally\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DatePicker\r\n        selected={startDate}\r\n        onChange={handleDateChange}\r\n        startDate={startDate}\r\n        endDate={endDate}\r\n        selectsRange\r\n        inline\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateRangeBar;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAM,CAACC,KAAK,EAAEC,GAAG,CAAC,GAAGF,KAAK;IAC1BJ,YAAY,CAACK,KAAK,CAAC;IACnBH,UAAU,CAACI,GAAG,CAAC;IACf;IACA;EACF,CAAC;;EAED,oBACEV,OAAA;IAAAW,QAAA,eACEX,OAAA,CAACF,UAAU;MACTc,QAAQ,EAAET,SAAU;MACpBU,QAAQ,EAAEN,gBAAiB;MAC3BJ,SAAS,EAAEA,SAAU;MACrBE,OAAO,EAAEA,OAAQ;MACjBS,YAAY;MACZC,MAAM;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAxBID,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}