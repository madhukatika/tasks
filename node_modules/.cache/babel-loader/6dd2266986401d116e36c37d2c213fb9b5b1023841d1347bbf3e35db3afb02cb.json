{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhavi.katika\\\\Downloads\\\\first-task1\\\\first-task1-main\\\\src\\\\Components\\\\SearchData\\\\index.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useContext } from \"react\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n// import mergeData from \"../../json_data/merged_file.json\";\n// import Displaytable from \"../Displaytable\";\n// import Gdata from \"../GobalContext\";\n\n// const SearchComponent = () => {\n//   let gdata = useContext(Gdata);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [selectedTime, setSelectedTime] = useState(\"\");\n//   const [searchResults, setSearchResults] = useState([]);\n\n//   useEffect(() => {\n//     performSearch(searchTerm, selectedDate, selectedTime);\n//   }, [searchTerm, selectedDate, selectedTime]);\n\n//   useEffect(() => {\n//     gdata.update(graph);\n//   }, [searchResults]);\n\n//   const handleSearch = (e) => {\n//     const term = e.target.value;\n//     setSearchTerm(term);\n//   };\n\n//   const handleDateChange = (date) => {\n//     setSelectedDate(date);\n//   };\n\n//   const handleTimeChange = (e) => {\n//     const time = e.target.value;\n//     setSelectedTime(time);\n//   };\n\n//   const performSearch = (term, date, time) => {\n//     const results = mergeData.filter((item) => {\n//       if (item.hasOwnProperty(\"thermostatPacket\")) {\n//         const { product } = item.thermostatPacket.info;\n\n//         const timestamp = new Date(item.thermostatPacket.data.timestamp);\n\n//         if (!date && !time) {\n//           // When no date and time are selected, include all items\n//           return product.toLowerCase().includes(term.toLowerCase());\n//         } else if (date && !time) {\n//           // When only date is selected, filter by date\n//           return (\n//             product.toLowerCase().includes(term.toLowerCase()) &&\n//             timestamp.toDateString() === date.toDateString()\n//           );\n//         } else if (!date && time) {\n//           // When only time is selected, filter by time\n//           return (\n//             product.toLowerCase().includes(term.toLowerCase()) &&\n//             timestamp.toISOString().split(\"T\")[1].startsWith(time)\n//           );\n//         } else {\n//           // When both date and time are selected, filter by date and time\n//           const selectedDateTime = new Date(date.toDateString() + \" \" + time);\n//           return (\n//             product.toLowerCase().includes(term.toLowerCase()) &&\n//             timestamp.getTime() === selectedDateTime.getTime()\n//           );\n//         }\n//       }\n//     });\n\n//     setSearchResults(results);\n//   };\n//   // const performSearch = (term, date, time) => {\n//   //   const results = mergeData.filter((item) => {\n//   //     if (item.hasOwnProperty(\"thermostatPacket\")) {\n//   //       const { product } = item.thermostatPacket.info;\n//   //       const timestamp = new Date(item.thermostatPacket.data.timestamp);\n\n//   //       if (!date && !time) {\n//   //         // When no date and time are selected, include all items\n//   //         return product.toLowerCase().includes(term.toLowerCase());\n//   //       } else if (date && !time) {\n//   //         // When only date is selected, filter by date\n//   //         return (\n//   //           product.toLowerCase().includes(term.toLowerCase()) &&\n//   //           timestamp.toDateString() === date.toDateString()\n//   //         );\n//   //       } else if (!date && time) {\n//   //         // When only time is selected, filter by time\n//   //         return (\n//   //           product.toLowerCase().includes(term.toLowerCase()) &&\n//   //           timestamp.toISOString().split(\"T\")[1].startsWith(time)\n//   //         );\n//   //       } else {\n//   //         // When both date and time are selected, filter by date and time\n//   //         const selectedDateTime = new Date(date.toDateString() + \" \" + time);\n//   //         return (\n//   //           product.toLowerCase().includes(term.toLowerCase()) &&\n//   //           timestamp.getTime() === selectedDateTime.getTime()\n//   //         );\n//   //       }\n//   //     }\n//   //   });\n\n//   //   setSearchResults(results);\n//   // };\n\n//   var graph = searchResults.map((item, index) => item.thermostatPacket);\n\n//   return (\n//     <div>\n//       <input\n//         style={{\n//           width: \"30%\",\n//           height: \"3vh\",\n//           padding: \"5px\",\n//           marginBottom: \"5px\",\n//         }}\n//         type=\"text\"\n//         className=\"search-bar\"\n//         placeholder=\"Search product\"\n//         value={searchTerm}\n//         onChange={handleSearch}\n//       />\n//       <DatePicker\n//         style={{ width: \"30%\", height: \"3vh\" }}\n//         selected={selectedDate}\n//         onChange={handleDateChange}\n//         placeholderText=\"mm/dd/yyyy\"\n//         dateFormat=\"MM/dd/yyyy\"\n//       />\n//             <input\n//         style={{\n//           width: \"30%\",\n//           height: \"3vh\",\n//           padding: \"5px\",\n//           marginBottom: \"5px\",\n//         }}\n//         type=\"text\"\n//         className=\"search-bar\"\n//         placeholder=\"Search time (ISO format)\"\n//         value={selectedTime}\n//         onChange={handleTimeChange}\n//       />\n\n//       <table className=\"custom_table\">\n//         <thead>\n//           <tr>\n//             <th>date</th>\n//             <th>time</th>\n//             <th>product</th>\n//             <th>version</th>\n//             <th>id</th>\n//             <th>hvacMode</th>\n//             <th>deadband10xF</th>\n//             <th>outdoorTempLockout10xF</th>\n//             <th>programMode</th>\n//             <th>fanMode</th>\n//             <th>numHeatStages</th>\n//             <th>numCompressorStages</th>\n//             <th>numHeatStages</th>\n//             <th>smartSensorCnt</th>\n//             <th>outdoorTemperature10xF</th>\n//             <th>indoorTemperature10xF</th>\n//             <th>outdoorHumidityPer</th>\n//             <th>indoorHumidityPer</th>\n//           </tr>\n//         </thead>\n//         {searchResults.map((item, index) => (\n//           <Displaytable data={item} key={index} />\n//         ))}\n//       </table>\n\n//     </div>\n//   );\n// };\n\n// export default SearchComponent;\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport mergeData from \"../../json_data/merged_file.json\";\nimport Displaytable from \"../Displaytable\";\nimport Gdata from \"../GobalContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchComponent = () => {\n  _s();\n  let gdata = useContext(Gdata);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    performSearch(searchTerm, selectedDate, selectedTime);\n  }, [searchTerm, selectedDate, selectedTime]);\n  useEffect(() => {\n    gdata.update(graph);\n  }, [searchResults]);\n  const handleSearch = e => {\n    const term = e.target.value;\n    setSearchTerm(term);\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const handleTimeChange = e => {\n    const time = e.target.value;\n    setSelectedTime(time);\n  };\n  const performSearch = (term, date, time) => {\n    const results = mergeData.filter(item => {\n      var _item$thermostatPacke, _item$thermostatPacke2, _item$thermostatPacke3;\n      if (item !== null && item !== void 0 && (_item$thermostatPacke = item.thermostatPacket) !== null && _item$thermostatPacke !== void 0 && _item$thermostatPacke.info && item !== null && item !== void 0 && (_item$thermostatPacke2 = item.thermostatPacket) !== null && _item$thermostatPacke2 !== void 0 && _item$thermostatPacke2.config && item !== null && item !== void 0 && (_item$thermostatPacke3 = item.thermostatPacket) !== null && _item$thermostatPacke3 !== void 0 && _item$thermostatPacke3.data) {\n        const {\n          product,\n          version,\n          id\n        } = item.thermostatPacket.info;\n        const {\n          fanMode,\n          hvacMode\n        } = item.thermostatPacket.config;\n        const timestamp = new Date(item.thermostatPacket.data.timestamp);\n        if (!date && !time) {\n          var _product$toLowerCase, _programMode, _programMode$toLowerC, _hvacMode$toLowerCase, _id$toLowerCase;\n          // When no date and time are selected, include all items\n          return (product === null || product === void 0 ? void 0 : (_product$toLowerCase = product.toLowerCase()) === null || _product$toLowerCase === void 0 ? void 0 : _product$toLowerCase.includes(term === null || term === void 0 ? void 0 : term.toLowerCase())) || ((_programMode = programMode) === null || _programMode === void 0 ? void 0 : (_programMode$toLowerC = _programMode.toLowerCase()) === null || _programMode$toLowerC === void 0 ? void 0 : _programMode$toLowerC.includes(term === null || term === void 0 ? void 0 : term.toLowerCase())) || (hvacMode === null || hvacMode === void 0 ? void 0 : (_hvacMode$toLowerCase = hvacMode.toLowerCase()) === null || _hvacMode$toLowerCase === void 0 ? void 0 : _hvacMode$toLowerCase.includes(term === null || term === void 0 ? void 0 : term.toLowerCase())) || (id === null || id === void 0 ? void 0 : (_id$toLowerCase = id.toLowerCase()) === null || _id$toLowerCase === void 0 ? void 0 : _id$toLowerCase.includes(term === null || term === void 0 ? void 0 : term.toLowerCase()));\n        } else if (date && !time) {\n          var _product$toLowerCase2, _programMode2, _programMode2$toLower, _hvacMode$toLowerCase2, _id$toLowerCase2;\n          // When only date is selected, filter by date\n          return ((product === null || product === void 0 ? void 0 : (_product$toLowerCase2 = product.toLowerCase()) === null || _product$toLowerCase2 === void 0 ? void 0 : _product$toLowerCase2.includes(term === null || term === void 0 ? void 0 : term.toLowerCase())) || ((_programMode2 = programMode) === null || _programMode2 === void 0 ? void 0 : (_programMode2$toLower = _programMode2.toLowerCase()) === null || _programMode2$toLower === void 0 ? void 0 : _programMode2$toLower.includes(term === null || term === void 0 ? void 0 : term.toLowerCase())) || (hvacMode === null || hvacMode === void 0 ? void 0 : (_hvacMode$toLowerCase2 = hvacMode.toLowerCase()) === null || _hvacMode$toLowerCase2 === void 0 ? void 0 : _hvacMode$toLowerCase2.includes(term === null || term === void 0 ? void 0 : term.toLowerCase())) || (id === null || id === void 0 ? void 0 : (_id$toLowerCase2 = id.toLowerCase()) === null || _id$toLowerCase2 === void 0 ? void 0 : _id$toLowerCase2.includes(term === null || term === void 0 ? void 0 : term.toLowerCase()))) && timestamp.toDateString() === date.toDateString();\n        } else if (!date && time) {\n          var _product$toLowerCase3, _programMode3, _programMode3$toLower, _hvacMode$toLowerCase3, _id$toLowerCase3;\n          // When only time is selected, filter by time\n          return ((product === null || product === void 0 ? void 0 : (_product$toLowerCase3 = product.toLowerCase()) === null || _product$toLowerCase3 === void 0 ? void 0 : _product$toLowerCase3.includes(term === null || term === void 0 ? void 0 : term.toLowerCase())) || ((_programMode3 = programMode) === null || _programMode3 === void 0 ? void 0 : (_programMode3$toLower = _programMode3.toLowerCase()) === null || _programMode3$toLower === void 0 ? void 0 : _programMode3$toLower.includes(term === null || term === void 0 ? void 0 : term.toLowerCase())) || (hvacMode === null || hvacMode === void 0 ? void 0 : (_hvacMode$toLowerCase3 = hvacMode.toLowerCase()) === null || _hvacMode$toLowerCase3 === void 0 ? void 0 : _hvacMode$toLowerCase3.includes(term === null || term === void 0 ? void 0 : term.toLowerCase())) || (id === null || id === void 0 ? void 0 : (_id$toLowerCase3 = id.toLowerCase()) === null || _id$toLowerCase3 === void 0 ? void 0 : _id$toLowerCase3.includes(term === null || term === void 0 ? void 0 : term.toLowerCase()))) && timestamp.toISOString().split(\"T\")[1].startsWith(time);\n        } else {\n          var _product$toLowerCase4, _programMode4, _programMode4$toLower, _hvacMode$toLowerCase4, _id$toLowerCase4;\n          // When both date and time are selected, filter by date and time\n          const selectedDateTime = new Date(date.toDateString() + \" \" + time);\n          return ((product === null || product === void 0 ? void 0 : (_product$toLowerCase4 = product.toLowerCase()) === null || _product$toLowerCase4 === void 0 ? void 0 : _product$toLowerCase4.includes(term === null || term === void 0 ? void 0 : term.toLowerCase())) || ((_programMode4 = programMode) === null || _programMode4 === void 0 ? void 0 : (_programMode4$toLower = _programMode4.toLowerCase()) === null || _programMode4$toLower === void 0 ? void 0 : _programMode4$toLower.includes(term === null || term === void 0 ? void 0 : term.toLowerCase())) || (hvacMode === null || hvacMode === void 0 ? void 0 : (_hvacMode$toLowerCase4 = hvacMode.toLowerCase()) === null || _hvacMode$toLowerCase4 === void 0 ? void 0 : _hvacMode$toLowerCase4.includes(term === null || term === void 0 ? void 0 : term.toLowerCase())) || (id === null || id === void 0 ? void 0 : (_id$toLowerCase4 = id.toLowerCase()) === null || _id$toLowerCase4 === void 0 ? void 0 : _id$toLowerCase4.includes(term === null || term === void 0 ? void 0 : term.toLowerCase()))) && timestamp.getTime() === selectedDateTime.getTime();\n        }\n      }\n    });\n    setSearchResults(results);\n  };\n  var graph = searchResults.map((item, index) => item.thermostatPacket);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        width: \"30%\",\n        height: \"3vh\",\n        padding: \"5px\",\n        marginBottom: \"5px\"\n      },\n      type: \"text\",\n      className: \"search-bar\",\n      placeholder: \"Search product, fanMode, hvacMode, or id\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      style: {\n        width: \"30%\",\n        height: \"3vh\"\n      },\n      selected: selectedDate,\n      onChange: handleDateChange,\n      placeholderText: \"mm/dd/yyyy\",\n      dateFormat: \"MM/dd/yyyy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        width: \"30%\",\n        height: \"3vh\",\n        padding: \"5px\",\n        marginBottom: \"5px\"\n      },\n      type: \"text\",\n      className: \"search-bar\",\n      placeholder: \"Search time (ISO format)\",\n      value: selectedTime,\n      onChange: handleTimeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"custom_table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"version\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"hvacMode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"deadband10xF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"outdoorTempLockout10xF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"programMode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"fanMode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"numHeatStages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"numCompressorStages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"numHeatStages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"smartSensorCnt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"outdoorTemperature10xF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"indoorTemperature10xF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"outdoorHumidityPer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"indoorHumidityPer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: searchResults.map((item, index) => /*#__PURE__*/_jsxDEV(Displaytable, {\n          data: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchComponent, \"CqUy9coio9AvSa+Sxmj/W7CPa7U=\");\n_c = SearchComponent;\nexport default SearchComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchComponent\");","map":{"version":3,"names":["React","useState","useEffect","useContext","DatePicker","mergeData","Displaytable","Gdata","jsxDEV","_jsxDEV","SearchComponent","_s","gdata","searchTerm","setSearchTerm","selectedDate","setSelectedDate","selectedTime","setSelectedTime","searchResults","setSearchResults","performSearch","update","graph","handleSearch","e","term","target","value","handleDateChange","date","handleTimeChange","time","results","filter","item","_item$thermostatPacke","_item$thermostatPacke2","_item$thermostatPacke3","thermostatPacket","info","config","data","product","version","id","fanMode","hvacMode","timestamp","Date","_product$toLowerCase","_programMode","_programMode$toLowerC","_hvacMode$toLowerCase","_id$toLowerCase","toLowerCase","includes","programMode","_product$toLowerCase2","_programMode2","_programMode2$toLower","_hvacMode$toLowerCase2","_id$toLowerCase2","toDateString","_product$toLowerCase3","_programMode3","_programMode3$toLower","_hvacMode$toLowerCase3","_id$toLowerCase3","toISOString","split","startsWith","_product$toLowerCase4","_programMode4","_programMode4$toLower","_hvacMode$toLowerCase4","_id$toLowerCase4","selectedDateTime","getTime","map","index","children","style","width","height","padding","marginBottom","type","className","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","selected","placeholderText","dateFormat","_c","$RefreshReg$"],"sources":["C:/Users/madhavi.katika/Downloads/first-task1/first-task1-main/src/Components/SearchData/index.js"],"sourcesContent":["\n// import React, { useState, useEffect, useContext } from \"react\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n// import mergeData from \"../../json_data/merged_file.json\";\n// import Displaytable from \"../Displaytable\";\n// import Gdata from \"../GobalContext\";\n\n// const SearchComponent = () => {\n//   let gdata = useContext(Gdata);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [selectedTime, setSelectedTime] = useState(\"\");\n//   const [searchResults, setSearchResults] = useState([]);\n\n//   useEffect(() => {\n//     performSearch(searchTerm, selectedDate, selectedTime);\n//   }, [searchTerm, selectedDate, selectedTime]);\n\n//   useEffect(() => {\n//     gdata.update(graph);\n//   }, [searchResults]);\n\n//   const handleSearch = (e) => {\n//     const term = e.target.value;\n//     setSearchTerm(term);\n//   };\n\n//   const handleDateChange = (date) => {\n//     setSelectedDate(date);\n//   };\n\n//   const handleTimeChange = (e) => {\n//     const time = e.target.value;\n//     setSelectedTime(time);\n//   };\n\n//   const performSearch = (term, date, time) => {\n//     const results = mergeData.filter((item) => {\n//       if (item.hasOwnProperty(\"thermostatPacket\")) {\n//         const { product } = item.thermostatPacket.info;\n      \n//         const timestamp = new Date(item.thermostatPacket.data.timestamp);\n\n//         if (!date && !time) {\n//           // When no date and time are selected, include all items\n//           return product.toLowerCase().includes(term.toLowerCase());\n//         } else if (date && !time) {\n//           // When only date is selected, filter by date\n//           return (\n//             product.toLowerCase().includes(term.toLowerCase()) &&\n//             timestamp.toDateString() === date.toDateString()\n//           );\n//         } else if (!date && time) {\n//           // When only time is selected, filter by time\n//           return (\n//             product.toLowerCase().includes(term.toLowerCase()) &&\n//             timestamp.toISOString().split(\"T\")[1].startsWith(time)\n//           );\n//         } else {\n//           // When both date and time are selected, filter by date and time\n//           const selectedDateTime = new Date(date.toDateString() + \" \" + time);\n//           return (\n//             product.toLowerCase().includes(term.toLowerCase()) &&\n//             timestamp.getTime() === selectedDateTime.getTime()\n//           );\n//         }\n//       }\n//     });\n\n//     setSearchResults(results);\n//   };\n//   // const performSearch = (term, date, time) => {\n//   //   const results = mergeData.filter((item) => {\n//   //     if (item.hasOwnProperty(\"thermostatPacket\")) {\n//   //       const { product } = item.thermostatPacket.info;\n//   //       const timestamp = new Date(item.thermostatPacket.data.timestamp);\n  \n//   //       if (!date && !time) {\n//   //         // When no date and time are selected, include all items\n//   //         return product.toLowerCase().includes(term.toLowerCase());\n//   //       } else if (date && !time) {\n//   //         // When only date is selected, filter by date\n//   //         return (\n//   //           product.toLowerCase().includes(term.toLowerCase()) &&\n//   //           timestamp.toDateString() === date.toDateString()\n//   //         );\n//   //       } else if (!date && time) {\n//   //         // When only time is selected, filter by time\n//   //         return (\n//   //           product.toLowerCase().includes(term.toLowerCase()) &&\n//   //           timestamp.toISOString().split(\"T\")[1].startsWith(time)\n//   //         );\n//   //       } else {\n//   //         // When both date and time are selected, filter by date and time\n//   //         const selectedDateTime = new Date(date.toDateString() + \" \" + time);\n//   //         return (\n//   //           product.toLowerCase().includes(term.toLowerCase()) &&\n//   //           timestamp.getTime() === selectedDateTime.getTime()\n//   //         );\n//   //       }\n//   //     }\n//   //   });\n  \n//   //   setSearchResults(results);\n//   // };\n  \n\n//   var graph = searchResults.map((item, index) => item.thermostatPacket);\n  \n\n//   return (\n//     <div>\n//       <input\n//         style={{\n//           width: \"30%\",\n//           height: \"3vh\",\n//           padding: \"5px\",\n//           marginBottom: \"5px\",\n//         }}\n//         type=\"text\"\n//         className=\"search-bar\"\n//         placeholder=\"Search product\"\n//         value={searchTerm}\n//         onChange={handleSearch}\n//       />\n//       <DatePicker\n//         style={{ width: \"30%\", height: \"3vh\" }}\n//         selected={selectedDate}\n//         onChange={handleDateChange}\n//         placeholderText=\"mm/dd/yyyy\"\n//         dateFormat=\"MM/dd/yyyy\"\n//       />\n//             <input\n//         style={{\n//           width: \"30%\",\n//           height: \"3vh\",\n//           padding: \"5px\",\n//           marginBottom: \"5px\",\n//         }}\n//         type=\"text\"\n//         className=\"search-bar\"\n//         placeholder=\"Search time (ISO format)\"\n//         value={selectedTime}\n//         onChange={handleTimeChange}\n//       />\n    \n\n      \n\n//       <table className=\"custom_table\">\n//         <thead>\n//           <tr>\n//             <th>date</th>\n//             <th>time</th>\n//             <th>product</th>\n//             <th>version</th>\n//             <th>id</th>\n//             <th>hvacMode</th>\n//             <th>deadband10xF</th>\n//             <th>outdoorTempLockout10xF</th>\n//             <th>programMode</th>\n//             <th>fanMode</th>\n//             <th>numHeatStages</th>\n//             <th>numCompressorStages</th>\n//             <th>numHeatStages</th>\n//             <th>smartSensorCnt</th>\n//             <th>outdoorTemperature10xF</th>\n//             <th>indoorTemperature10xF</th>\n//             <th>outdoorHumidityPer</th>\n//             <th>indoorHumidityPer</th>\n//           </tr>\n//         </thead>\n//         {searchResults.map((item, index) => (\n//           <Displaytable data={item} key={index} />\n//         ))}\n//       </table>\n      \n//     </div>\n//   );\n// };\n\n// export default SearchComponent;\n\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport mergeData from \"../../json_data/merged_file.json\";\nimport Displaytable from \"../Displaytable\";\nimport Gdata from \"../GobalContext\";\n\nconst SearchComponent = () => {\n  let gdata = useContext(Gdata);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  useEffect(() => {\n    performSearch(searchTerm, selectedDate, selectedTime);\n  }, [searchTerm, selectedDate, selectedTime]);\n\n  useEffect(() => {\n    gdata.update(graph);\n  }, [searchResults]);\n\n  const handleSearch = (e) => {\n    const term = e.target.value;\n    setSearchTerm(term);\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (e) => {\n    const time = e.target.value;\n    setSelectedTime(time);\n  };\n\n  const performSearch = (term, date, time) => {\n    const results = mergeData.filter((item) => {\n      if (item?.thermostatPacket?.info && item?.thermostatPacket?.config && item?.thermostatPacket?.data) {\n        const { product, version, id } = item.thermostatPacket.info;\n        const { fanMode, hvacMode } = item.thermostatPacket.config;\n        const timestamp = new Date(item.thermostatPacket.data.timestamp);\n  \n        if (!date && !time) {\n          // When no date and time are selected, include all items\n          return (\n            product?.toLowerCase()?.includes(term?.toLowerCase()) ||\n            programMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n            hvacMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n            id?.toLowerCase()?.includes(term?.toLowerCase())\n          );\n        } else if (date && !time) {\n          // When only date is selected, filter by date\n          return (\n            (product?.toLowerCase()?.includes(term?.toLowerCase()) ||\n            programMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n              hvacMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n              id?.toLowerCase()?.includes(term?.toLowerCase())) &&\n            timestamp.toDateString() === date.toDateString()\n          );\n        } else if (!date && time) {\n          // When only time is selected, filter by time\n          return (\n            (product?.toLowerCase()?.includes(term?.toLowerCase()) ||\n            programMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n              hvacMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n              id?.toLowerCase()?.includes(term?.toLowerCase())) &&\n            timestamp.toISOString().split(\"T\")[1].startsWith(time)\n          );\n        } else {\n          // When both date and time are selected, filter by date and time\n          const selectedDateTime = new Date(date.toDateString() + \" \" + time);\n          return (\n            (product?.toLowerCase()?.includes(term?.toLowerCase()) ||\n            programMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n              hvacMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n              id?.toLowerCase()?.includes(term?.toLowerCase())) &&\n            timestamp.getTime() === selectedDateTime.getTime()\n          );\n        }\n      }\n    });\n  \n    setSearchResults(results);\n  };\n  \n  \n\n\n  var graph = searchResults.map((item, index) => item.thermostatPacket);\n\n  return (\n    <div>\n      <input\n        style={{\n          width: \"30%\",\n          height: \"3vh\",\n          padding: \"5px\",\n          marginBottom: \"5px\",\n        }}\n        type=\"text\"\n        className=\"search-bar\"\n        placeholder=\"Search product, fanMode, hvacMode, or id\"\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      <DatePicker\n        style={{ width: \"30%\", height: \"3vh\" }}\n        selected={selectedDate}\n        onChange={handleDateChange}\n        placeholderText=\"mm/dd/yyyy\"\n        dateFormat=\"MM/dd/yyyy\"\n      />\n      <input\n        style={{\n          width: \"30%\",\n          height: \"3vh\",\n          padding: \"5px\",\n          marginBottom: \"5px\",\n        }}\n        type=\"text\"\n        className=\"search-bar\"\n        placeholder=\"Search time (ISO format)\"\n        value={selectedTime}\n        onChange={handleTimeChange}\n      />\n\n      <table className=\"custom_table\">\n        <thead>\n          <tr>\n            <th>date</th>\n            <th>time</th>\n            <th>product</th>\n            <th>version</th>\n            <th>id</th>\n            <th>hvacMode</th>\n            <th>deadband10xF</th>\n            <th>outdoorTempLockout10xF</th>\n            <th>programMode</th>\n            <th>fanMode</th>\n            <th>numHeatStages</th>\n            <th>numCompressorStages</th>\n            <th>numHeatStages</th>\n            <th>smartSensorCnt</th>\n            <th>outdoorTemperature10xF</th>\n            <th>indoorTemperature10xF</th>\n            <th>outdoorHumidityPer</th>\n            <th>indoorHumidityPer</th>\n          </tr>\n        </thead>\n        <tbody>\n          {searchResults.map((item, index) => (\n            <Displaytable data={item} key={index} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default SearchComponent;\n\n\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,4CAA4C;AACnD,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,IAAIC,KAAK,GAAGT,UAAU,CAACI,KAAK,CAAC;EAC7B,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}