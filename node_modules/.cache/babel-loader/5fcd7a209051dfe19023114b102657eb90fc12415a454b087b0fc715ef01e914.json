{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhavi.katika\\\\Downloads\\\\first-task1\\\\first-task1-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport GraphData from './Components/GraphData';\nimport SearchComponent from './Components/SearchData';\n// import ChartComponent from './Components/charts/index';\nimport Gdata from './Components/GobalContext';\nimport { useState } from 'react';\n\n// import allFiles from '../src/json_data/merged_file.json'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let update = data => {\n    setGdata({\n      ...gdata,\n      \"lineGraph\": [...gdata.lineGraph, ...data]\n    });\n  };\n  let [gdata, setGdata] = useState({\n    \"update\": update,\n    \"lineGraph\": []\n  });\n  console.log(\"from app\", gdata);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Gdata.Provider, {\n      value: gdata,\n      children: [/*#__PURE__*/_jsxDEV(\"scrollbars\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(SearchComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(GraphData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"WVpOBSbL8N2ej/6543xxOUSE2cw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["GraphData","SearchComponent","Gdata","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","update","data","setGdata","gdata","lineGraph","console","log","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/madhavi.katika/Downloads/first-task1/first-task1-main/src/App.js"],"sourcesContent":["\n\nimport './App.css';\nimport GraphData from './Components/GraphData';\n\nimport SearchComponent from './Components/SearchData';\n// import ChartComponent from './Components/charts/index';\nimport Gdata from './Components/GobalContext';\nimport { useState } from 'react';\n\n// import allFiles from '../src/json_data/merged_file.json'\n\n\nfunction App() {\n  let update=(data)=>{\n    setGdata({...gdata,\"lineGraph\":[...gdata.lineGraph,...data]})\n  }\n  let [gdata,setGdata]=useState({\"update\":update,\"lineGraph\":[]})\n  console.log(\"from app\",gdata)\n  return (\n    <>\n\n<Gdata.Provider value={gdata}>\n  <scrollbars/>\n <SearchComponent/>\n <GraphData/>\n </Gdata.Provider>\n {/* <ChartComponent/> */}\n{/* <Datepicker/> */}\n\n\n\n \n  </>\n   \n  );\n}\n\nexport default App;\n"],"mappings":";;AAEA,OAAO,WAAW;AAClB,OAAOA,SAAS,MAAM,wBAAwB;AAE9C,OAAOC,eAAe,MAAM,yBAAyB;AACrD;AACA,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAIC,MAAM,GAAEC,IAAI,IAAG;IACjBC,QAAQ,CAAC;MAAC,GAAGC,KAAK;MAAC,WAAW,EAAC,CAAC,GAAGA,KAAK,CAACC,SAAS,EAAC,GAAGH,IAAI;IAAC,CAAC,CAAC;EAC/D,CAAC;EACD,IAAI,CAACE,KAAK,EAACD,QAAQ,CAAC,GAACT,QAAQ,CAAC;IAAC,QAAQ,EAACO,MAAM;IAAC,WAAW,EAAC;EAAE,CAAC,CAAC;EAC/DK,OAAO,CAACC,GAAG,CAAC,UAAU,EAACH,KAAK,CAAC;EAC7B,oBACER,OAAA,CAAAE,SAAA;IAAAU,QAAA,eAEJZ,OAAA,CAACH,KAAK,CAACgB,QAAQ;MAACC,KAAK,EAAEN,KAAM;MAAAI,QAAA,gBAC3BZ,OAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACdlB,OAAA,CAACJ,eAAe;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAClBlB,OAAA,CAACL,SAAS;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC,gBAOd,CAAC;AAGL;AAACd,EAAA,CAvBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}