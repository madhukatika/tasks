{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhavi.katika\\\\Downloads\\\\first-task1\\\\first-task1-main\\\\src\\\\Components\\\\SearchData\\\\index.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useContext } from \"react\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n// import mergeData from \"../../json_data/merged_file.json\";\n// import Displaytable from \"../Displaytable\";\n// import Gdata from \"../GobalContext\";\n// import { Slide, Slider } from '@mui/material';\n\n// const SearchComponent = () => {\n//   let gdata = useContext(Gdata);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [selectedTime, setSelectedTime] = useState(\"\");\n//   const [searchResults, setSearchResults] = useState([]);\n\n//   useEffect(() => {\n//     performSearch(searchTerm, selectedDate, selectedTime);\n//   }, [searchTerm, selectedDate, selectedTime]);\n\n//   useEffect(() => {\n//     gdata.update(graph);\n//   }, [searchResults]);\n\n//   const handleSearch = (e) => {\n//     const term = e.target.value;\n//     setSearchTerm(term);\n//   };\n\n//   const handleDateChange = (date) => {\n//     setSelectedDate(date);\n//   };\n\n//   const handleTimeChange = (e) => {\n//     const time = e.target.value;\n//     setSelectedTime(time);\n//   };\n//   const performSearch = (term, date, time) => {\n//     const results = mergeData.filter((item) => {\n//       if (item?.thermostatPacket?.info && item?.thermostatPacket?.config && item?.thermostatPacket?.data && item?.thermostatPacket?.settings) {\n//         const { product, id } = item.thermostatPacket.info;\n//         const { programMode } = item.thermostatPacket.config;\n//         const { hvacMode } = item.thermostatPacket.settings;\n//         const timestamp = new Date(item.thermostatPacket.data.timestamp);\n\n//         if (!date && !time) {\n//           // When no date and time are selected, include all items\n//           return (\n//             product?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//             programMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//             hvacMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//             id?.toLowerCase()?.includes(term?.toLowerCase())\n//           );\n//         } else if (date && !time) {\n//           // When only date is selected, filter by date\n//           return (\n//             (product?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//             programMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//               hvacMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//               id?.toLowerCase()?.includes(term?.toLowerCase())) &&\n//             timestamp.toDateString() === date.toDateString()\n//           );\n//         } else if (!date && time) {\n//           // When only time is selected, filter by time\n//           return (\n//             (product?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//             programMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//               hvacMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//               id?.toLowerCase()?.includes(term?.toLowerCase())) &&\n//             timestamp.toISOString().split(\"T\")[1].startsWith(time)\n//           );\n//         } else {\n//           // When both date and time are selected, filter by date and time\n//           const selectedDateTime = new Date(date.toDateString() + \" \" + time);\n//           return (\n//             (product?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//             programMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//               hvacMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//               id?.toLowerCase()?.includes(term?.toLowerCase())) &&\n//             timestamp.getTime() === selectedDateTime.getTime()\n//           );\n//         }\n//       }\n//     });\n\n//     setSearchResults(results);\n//   };\n//   var graph = searchResults.map((item, index) => item.thermostatPacket);\n//   return (\n//     <div>\n//       <div>\n//       <input\n//         style={{\n//           width: \"30%\",\n//           height: \"3vh\",\n//           padding: \"5px\",\n//           marginBottom: \"5px\",\n//         }}\n//         type=\"text\"\n//         className=\"search-bar\"\n//         placeholder=\"Search product\"\n//         value={searchTerm}\n//         onChange={handleSearch}\n//       />\n//       <DatePicker\n//         style={{ width: \"30%\", height: \"3vh\" }}\n//         selected={selectedDate}\n//         onChange={handleDateChange}\n//         placeholderText=\"mm/dd/yyyy\"\n//         dateFormat=\"MM/dd/yyyy\"\n//       />\n//             <input\n//         style={{\n//           width: \"30%\",\n//           height: \"3vh\",\n//           padding: \"5px\",\n//           marginBottom: \"5px\",\n//         }}\n//         type=\"text\"\n//         className=\"search-bar\"\n//         placeholder=\"Search time (ISO format)\"\n//         value={selectedTime}\n//         onChange={handleTimeChange}\n//       />\n//       <Slider sx={{maxWidth:'465px'}}\n//   aria-label=\"Temperature\"\n//   defaultValue={0}\n//   min={10}\n\n//   color=\"secondary\"\n// />\n\n//   <div className=\"table-container\">\n//       <table className=\"custom_table\">\n//         <thead>\n//           <tr>\n//             <th>date</th>\n//             <th>time</th>\n//             <th>product</th>\n//             <th>version</th>\n//             <th>id</th>\n//             <th>hvacMode</th>\n//             <th>deadband10xF</th>\n//             <th>outdoorTempLockout10xF</th>\n//             <th>programMode</th>\n//             <th>fanMode</th>\n//             <th>numHeatStages</th>\n//             <th>numCompressorStages</th>\n//             <th>numHeatStages</th>\n//             <th>smartSensorCnt</th>\n//             <th>outdoorTemperature10xF</th>\n//             <th>indoorTemperature10xF</th>\n//             <th>outdoorHumidityPer</th>\n//             <th>indoorHumidityPer</th>\n//           </tr>\n//         </thead>\n//         {searchResults.map((item, index) => (\n//           <Displaytable data={item} key={index} />\n//         ))}\n//       </table>\n//       </div>\n//       </div>\n\n//     </div>\n//   );\n// };\n\n// export default SearchComponent;\n\nimport React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport mergeData from \"../../json_data/merged_file.json\";\nimport Displaytable from \"../Displaytable\";\nimport { Slider } from '@mui/material';\nimport LineGraph from \"../Components/LineGraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchComponent = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [sliderValue, setSliderValue] = useState(0);\n  const [graphData, setGraphData] = useState([]);\n  useEffect(() => {\n    performSearch(searchTerm, selectedDate, selectedTime);\n  }, [searchTerm, selectedDate, selectedTime]);\n  useEffect(() => {\n    setGraphData([...searchResults.map(item => item.thermostatPacket)]);\n  }, [searchResults]);\n  const handleSearch = e => {\n    const term = e.target.value;\n    setSearchTerm(term);\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const handleTimeChange = e => {\n    const time = e.target.value;\n    setSelectedTime(time);\n  };\n  const handleSliderChange = (event, value) => {\n    setSliderValue(value);\n  };\n  const performSearch = (term, date, time) => {\n    const results = mergeData.filter(item => {\n      // Filter logic remains the same\n      // ...\n    });\n    setSearchResults(results);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: \"30%\",\n          height: \"3vh\",\n          padding: \"5px\",\n          marginBottom: \"5px\"\n        },\n        type: \"text\",\n        className: \"search-bar\",\n        placeholder: \"Search product\",\n        value: searchTerm,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        style: {\n          width: \"30%\",\n          height: \"3vh\"\n        },\n        selected: selectedDate,\n        onChange: handleDateChange,\n        placeholderText: \"mm/dd/yyyy\",\n        dateFormat: \"MM/dd/yyyy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: \"30%\",\n          height: \"3vh\",\n          padding: \"5px\",\n          marginBottom: \"5px\"\n        },\n        type: \"text\",\n        className: \"search-bar\",\n        placeholder: \"Search time (ISO format)\",\n        value: selectedTime,\n        onChange: handleTimeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        \"aria-label\": \"Temperature\",\n        value: sliderValue,\n        min: 0,\n        max: 100,\n        onChange: handleSliderChange,\n        valueLabelDisplay: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: /*#__PURE__*/_jsxDEV(LineGraph, {\n        lineGraph: graphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"custom_table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [\"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"version\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"hvacMode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"deadband10xF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"outdoorTempLockout10xF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"programMode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"fanMode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"numHeatStages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"numCompressorStages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"numHeatStages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"smartSensorCnt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"outdoorTemperature10xF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"indoorTemperature10xF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"outdoorHumidityPer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 16\n            }, this), \"//             \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"indoorHumidityPer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 16\n            }, this), \"//\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: searchResults.map((item, index) => /*#__PURE__*/_jsxDEV(Displaytable, {\n            data: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchComponent, \"122hJJne+tnJ2aM8tY2gYexG4Ig=\");\n_c = SearchComponent;\nexport default SearchComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchComponent\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","mergeData","Displaytable","Slider","LineGraph","jsxDEV","_jsxDEV","SearchComponent","_s","searchTerm","setSearchTerm","selectedDate","setSelectedDate","selectedTime","setSelectedTime","searchResults","setSearchResults","sliderValue","setSliderValue","graphData","setGraphData","performSearch","map","item","thermostatPacket","handleSearch","e","term","target","value","handleDateChange","date","handleTimeChange","time","handleSliderChange","event","results","filter","children","style","width","height","padding","marginBottom","type","className","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","selected","placeholderText","dateFormat","min","max","valueLabelDisplay","lineGraph","index","data","_c","$RefreshReg$"],"sources":["C:/Users/madhavi.katika/Downloads/first-task1/first-task1-main/src/Components/SearchData/index.js"],"sourcesContent":["\n// import React, { useState, useEffect, useContext } from \"react\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n// import mergeData from \"../../json_data/merged_file.json\";\n// import Displaytable from \"../Displaytable\";\n// import Gdata from \"../GobalContext\";\n// import { Slide, Slider } from '@mui/material';\n\n// const SearchComponent = () => {\n//   let gdata = useContext(Gdata);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [selectedTime, setSelectedTime] = useState(\"\");\n//   const [searchResults, setSearchResults] = useState([]);\n\n//   useEffect(() => {\n//     performSearch(searchTerm, selectedDate, selectedTime);\n//   }, [searchTerm, selectedDate, selectedTime]);\n\n//   useEffect(() => {\n//     gdata.update(graph);\n//   }, [searchResults]);\n\n//   const handleSearch = (e) => {\n//     const term = e.target.value;\n//     setSearchTerm(term);\n//   };\n\n//   const handleDateChange = (date) => {\n//     setSelectedDate(date);\n//   };\n\n//   const handleTimeChange = (e) => {\n//     const time = e.target.value;\n//     setSelectedTime(time);\n//   };\n//   const performSearch = (term, date, time) => {\n//     const results = mergeData.filter((item) => {\n//       if (item?.thermostatPacket?.info && item?.thermostatPacket?.config && item?.thermostatPacket?.data && item?.thermostatPacket?.settings) {\n//         const { product, id } = item.thermostatPacket.info;\n//         const { programMode } = item.thermostatPacket.config;\n//         const { hvacMode } = item.thermostatPacket.settings;\n//         const timestamp = new Date(item.thermostatPacket.data.timestamp);\n  \n//         if (!date && !time) {\n//           // When no date and time are selected, include all items\n//           return (\n//             product?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//             programMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//             hvacMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//             id?.toLowerCase()?.includes(term?.toLowerCase())\n//           );\n//         } else if (date && !time) {\n//           // When only date is selected, filter by date\n//           return (\n//             (product?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//             programMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//               hvacMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//               id?.toLowerCase()?.includes(term?.toLowerCase())) &&\n//             timestamp.toDateString() === date.toDateString()\n//           );\n//         } else if (!date && time) {\n//           // When only time is selected, filter by time\n//           return (\n//             (product?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//             programMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//               hvacMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//               id?.toLowerCase()?.includes(term?.toLowerCase())) &&\n//             timestamp.toISOString().split(\"T\")[1].startsWith(time)\n//           );\n//         } else {\n//           // When both date and time are selected, filter by date and time\n//           const selectedDateTime = new Date(date.toDateString() + \" \" + time);\n//           return (\n//             (product?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//             programMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//               hvacMode?.toLowerCase()?.includes(term?.toLowerCase()) ||\n//               id?.toLowerCase()?.includes(term?.toLowerCase())) &&\n//             timestamp.getTime() === selectedDateTime.getTime()\n//           );\n//         }\n//       }\n//     });\n  \n//     setSearchResults(results);\n//   };\n//   var graph = searchResults.map((item, index) => item.thermostatPacket);\n//   return (\n//     <div>\n//       <div>\n//       <input\n//         style={{\n//           width: \"30%\",\n//           height: \"3vh\",\n//           padding: \"5px\",\n//           marginBottom: \"5px\",\n//         }}\n//         type=\"text\"\n//         className=\"search-bar\"\n//         placeholder=\"Search product\"\n//         value={searchTerm}\n//         onChange={handleSearch}\n//       />\n//       <DatePicker\n//         style={{ width: \"30%\", height: \"3vh\" }}\n//         selected={selectedDate}\n//         onChange={handleDateChange}\n//         placeholderText=\"mm/dd/yyyy\"\n//         dateFormat=\"MM/dd/yyyy\"\n//       />\n//             <input\n//         style={{\n//           width: \"30%\",\n//           height: \"3vh\",\n//           padding: \"5px\",\n//           marginBottom: \"5px\",\n//         }}\n//         type=\"text\"\n//         className=\"search-bar\"\n//         placeholder=\"Search time (ISO format)\"\n//         value={selectedTime}\n//         onChange={handleTimeChange}\n//       />\n//       <Slider sx={{maxWidth:'465px'}}\n//   aria-label=\"Temperature\"\n//   defaultValue={0}\n//   min={10}\n \n//   color=\"secondary\"\n// />\n\n    \n//   <div className=\"table-container\">\n//       <table className=\"custom_table\">\n//         <thead>\n//           <tr>\n//             <th>date</th>\n//             <th>time</th>\n//             <th>product</th>\n//             <th>version</th>\n//             <th>id</th>\n//             <th>hvacMode</th>\n//             <th>deadband10xF</th>\n//             <th>outdoorTempLockout10xF</th>\n//             <th>programMode</th>\n//             <th>fanMode</th>\n//             <th>numHeatStages</th>\n//             <th>numCompressorStages</th>\n//             <th>numHeatStages</th>\n//             <th>smartSensorCnt</th>\n//             <th>outdoorTemperature10xF</th>\n//             <th>indoorTemperature10xF</th>\n//             <th>outdoorHumidityPer</th>\n//             <th>indoorHumidityPer</th>\n//           </tr>\n//         </thead>\n//         {searchResults.map((item, index) => (\n//           <Displaytable data={item} key={index} />\n//         ))}\n//       </table>\n//       </div>\n//       </div>\n      \n      \n//     </div>\n//   );\n// };\n\n// export default SearchComponent;\n\n\nimport React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport mergeData from \"../../json_data/merged_file.json\";\nimport Displaytable from \"../Displaytable\";\nimport { Slider } from '@mui/material';\nimport LineGraph from \"../Components/LineGraph\";\n\nconst SearchComponent = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [sliderValue, setSliderValue] = useState(0);\n  const [graphData, setGraphData] = useState([]);\n\n  useEffect(() => {\n    performSearch(searchTerm, selectedDate, selectedTime);\n  }, [searchTerm, selectedDate, selectedTime]);\n\n  useEffect(() => {\n    setGraphData([...searchResults.map((item) => item.thermostatPacket)]);\n  }, [searchResults]);\n\n  const handleSearch = (e) => {\n    const term = e.target.value;\n    setSearchTerm(term);\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (e) => {\n    const time = e.target.value;\n    setSelectedTime(time);\n  };\n\n  const handleSliderChange = (event, value) => {\n    setSliderValue(value);\n  };\n\n  const performSearch = (term, date, time) => {\n    const results = mergeData.filter((item) => {\n      // Filter logic remains the same\n      // ...\n    });\n\n    setSearchResults(results);\n  };\n\n  return (\n    <div>\n      <div>\n        <input\n          style={{\n            width: \"30%\",\n            height: \"3vh\",\n            padding: \"5px\",\n            marginBottom: \"5px\",\n          }}\n          type=\"text\"\n          className=\"search-bar\"\n          placeholder=\"Search product\"\n          value={searchTerm}\n          onChange={handleSearch}\n        />\n        <DatePicker\n          style={{ width: \"30%\", height: \"3vh\" }}\n          selected={selectedDate}\n          onChange={handleDateChange}\n          placeholderText=\"mm/dd/yyyy\"\n          dateFormat=\"MM/dd/yyyy\"\n        />\n        <input\n          style={{\n            width: \"30%\",\n            height: \"3vh\",\n            padding: \"5px\",\n            marginBottom: \"5px\",\n          }}\n          type=\"text\"\n          className=\"search-bar\"\n          placeholder=\"Search time (ISO format)\"\n          value={selectedTime}\n          onChange={handleTimeChange}\n        />\n        <Slider\n          aria-label=\"Temperature\"\n          value={sliderValue}\n          min={0}\n          max={100}\n          onChange={handleSliderChange}\n          valueLabelDisplay=\"auto\"\n        />\n      </div>\n      <div className=\"graph-container\">\n        <LineGraph lineGraph={graphData} />\n      </div>\n      <div className=\"table-container\">\n        <table className=\"custom_table\">\n          <thead>\n            \n            <tr>\n//             <th>date</th>\n//             <th>time</th>\n//             <th>product</th>\n//             <th>version</th>\n//             <th>id</th>\n//             <th>hvacMode</th>\n//             <th>deadband10xF</th>\n//             <th>outdoorTempLockout10xF</th>\n//             <th>programMode</th>\n//             <th>fanMode</th>\n//             <th>numHeatStages</th>\n//             <th>numCompressorStages</th>\n//             <th>numHeatStages</th>\n//             <th>smartSensorCnt</th>\n//             <th>outdoorTemperature10xF</th>\n//             <th>indoorTemperature10xF</th>\n//             <th>outdoorHumidityPer</th>\n//             <th>indoorHumidityPer</th>\n//           \n            </tr>\n          </thead>\n          <tbody>\n            {searchResults.map((item, index) => (\n              <Displaytable data={item} key={index} />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchComponent;\n\n\n\n\n"],"mappingslD,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,4CAA4C;AACnD,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdsB,aAAa,CAACZ,UAAU,EAAEE,YAAY,EAAEE,YAAY,CAAC;EACvD,CAAC,EAAE,CAACJ,UAAU,EAAEE,YAAY,EAAEE,YAAY,CAAC,CAAC;EAE5Cd,SAAS,CAAC,MAAM;IACdqB,YAAY,CAAC,CAAC,GAAGL,aAAa,CAACO,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,gBAAgB,CAAC,CAAC,CAAC;EACvE,CAAC,EAAE,CAACT,aAAa,CAAC,CAAC;EAEnB,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC3BnB,aAAa,CAACiB,IAAI,CAAC;EACrB,CAAC;EAED,MAAMG,gBAAgB,GAAIC,IAAI,IAAK;IACjCnB,eAAe,CAACmB,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,gBAAgB,GAAIN,CAAC,IAAK;IAC9B,MAAMO,IAAI,GAAGP,CAAC,CAACE,MAAM,CAACC,KAAK;IAC3Bf,eAAe,CAACmB,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAACC,KAAK,EAAEN,KAAK,KAAK;IAC3CX,cAAc,CAACW,KAAK,CAAC;EACvB,CAAC;EAED,MAAMR,aAAa,GAAGA,CAACM,IAAI,EAAEI,IAAI,EAAEE,IAAI,KAAK;IAC1C,MAAMG,OAAO,GAAGnC,SAAS,CAACoC,MAAM,CAAEd,IAAI,IAAK;MACzC;MACA;IAAA,CACD,CAAC;IAEFP,gBAAgB,CAACoB,OAAO,CAAC;EAC3B,CAAC;EAED,oBACE9B,OAAA;IAAAgC,QAAA,gBACEhC,OAAA;MAAAgC,QAAA,gBACEhC,OAAA;QACEiC,KAAK,EAAE;UACLC,KAAK,EAAE,KAAK;UACZC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE,KAAK;UACdC,YAAY,EAAE;QAChB,CAAE;QACFC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAC,YAAY;QACtBC,WAAW,EAAC,gBAAgB;QAC5BjB,KAAK,EAAEpB,UAAW;QAClBsC,QAAQ,EAAEtB;MAAa;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF7C,OAAA,CAACN,UAAU;QACTuC,KAAK,EAAE;UAAEC,KAAK,EAAE,KAAK;UAAEC,MAAM,EAAE;QAAM,CAAE;QACvCW,QAAQ,EAAEzC,YAAa;QACvBoC,QAAQ,EAAEjB,gBAAiB;QAC3BuB,eAAe,EAAC,YAAY;QAC5BC,UAAU,EAAC;MAAY;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF7C,OAAA;QACEiC,KAAK,EAAE;UACLC,KAAK,EAAE,KAAK;UACZC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE,KAAK;UACdC,YAAY,EAAE;QAChB,CAAE;QACFC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAC,YAAY;QACtBC,WAAW,EAAC,0BAA0B;QACtCjB,KAAK,EAAEhB,YAAa;QACpBkC,QAAQ,EAAEf;MAAiB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACF7C,OAAA,CAACH,MAAM;QACL,cAAW,aAAa;QACxB0B,KAAK,EAAEZ,WAAY;QACnBsC,GAAG,EAAE,CAAE;QACPC,GAAG,EAAE,GAAI;QACTT,QAAQ,EAAEb,kBAAmB;QAC7BuB,iBAAiB,EAAC;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN7C,OAAA;MAAKuC,SAAS,EAAC,iBAAiB;MAAAP,QAAA,eAC9BhC,OAAA,CAACF,SAAS;QAACsD,SAAS,EAAEvC;MAAU;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACN7C,OAAA;MAAKuC,SAAS,EAAC,iBAAiB;MAAAP,QAAA,eAC9BhC,OAAA;QAAOuC,SAAS,EAAC,cAAc;QAAAP,QAAA,gBAC7BhC,OAAA;UAAAgC,QAAA,eAEEhC,OAAA;YAAAgC,QAAA,GAAI,iBACD,eAAAhC,OAAA;cAAAgC,QAAA,EAAI;YAAI;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBACb,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAI;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBACb,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAO;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBAChB,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAO;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBAChB,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAE;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBACX,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAQ;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBACjB,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAY;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBACrB,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAsB;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBAC/B,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAW;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBACpB,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAO;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBAChB,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAa;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBACtB,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAmB;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBAC5B,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAa;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBACtB,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAc;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBACvB,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAsB;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBAC/B,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAqB;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBAC9B,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAkB;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mBAC3B,eAAA7C,OAAA;cAAAgC,QAAA,EAAI;YAAiB;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,MAE7B;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACR7C,OAAA;UAAAgC,QAAA,EACGvB,aAAa,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEoC,KAAK,kBAC7BrD,OAAA,CAACJ,YAAY;YAAC0D,IAAI,EAAErC;UAAK,GAAMoC,KAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACxC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3C,EAAA,CA9HID,eAAe;AAAAsD,EAAA,GAAftD,eAAe;AAgIrB,eAAeA,eAAe;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}